Might want to make it able to read multiple elements on the same line (which it won't do for paths atm). If we can assume that all textures end in .bmp or .png this is doable however.

Still need to add --save flag as said in the subject, currently that will just return a 'too many arguments error'. Also dont resize resx and resy in this case?

Could write the printf-heavy debug function in a norm approved way using write and punter etc, and maybe include it as a runnable function using a '--debug' flag or something. That could help explain why my program rejects  .cub file if an evaluator uses a faulty one during the eval.

Minimum Resolution is currently 1x1, this should probably be larger but I don't know what size is realistic yet.

Need to handle spaces between the individual parts of map elements

Go through the subject pdf again when you think youre finished

Need to update makefile rules, make re etc.

Check if you can trigger an error with a valid .cub file by leaving it in a directory and telling the program it is located at "that_dir/*", shouldnt be an error, but might be in my current setup.

See if you can trick it to read a '.cub' directory

First get xpm textures to work, then see if I can make png's work too.

Unmirror south and east textures, figure out why they are being mirrored in the first place

Can sometimes cause a 'heap buffer overflow' when stepping backwards first thing when the map is first loaded.
This could be due to player position not being set properly yet, or perhaps something in the parser that has not yet converted the letter at the start pos on the map to a regular 0?

Sometimes segfaults when walking straight into a wall from the starting position without turning slightly first, probably to do with the pxdir or pydir being exactly 0? 
Need to investigate what causes this exactly, and stop it from happening.

Maps 2 and 6 crash, figure out why

Can crash map by walking straight forward without turning

Consider filling in floor and ceiling before drawing walls if wall has see through texture

Quite slow on large resolutions, need to see if I can speed it up
